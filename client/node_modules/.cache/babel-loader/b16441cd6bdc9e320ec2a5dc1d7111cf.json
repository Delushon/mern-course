{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/pansh/Desktop/mern-course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/pansh/Desktop/mern-course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/pansh/Desktop/mern-course/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useContext,useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{AuthContext}from\"../context/AuthContext\";import{Loader}from\"../components/Loader\";import{useHttp}from\"../hooks/http.hook\";import{LinkCard}from\"../components/LinkCard\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var DetailPage=function DetailPage(){var _useContext=useContext(AuthContext),token=_useContext.token;var _useHttp=useHttp(),request=_useHttp.request,loading=_useHttp.loading;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),link=_useState2[0],setLink=_useState2[1];var linkId=useParams().id;var getLink=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetched;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return request(\"/api/link/\".concat(linkId),'GET',null,{Authorization:\"Bearer \".concat(token)});case 3:fetched=_context.sent;setLink(fetched);_context.next=9;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);})),[token,linkId,request]);useEffect(function(){getLink();},[getLink]);if(loading){return/*#__PURE__*/_jsx(Loader,{});}return/*#__PURE__*/_jsx(_Fragment,{children:!loading&&link&&/*#__PURE__*/_jsx(LinkCard,{link:link})});};","map":{"version":3,"sources":["C:/Users/pansh/Desktop/mern-course/client/src/pages/DetailPage.js"],"names":["React","useCallback","useContext","useEffect","useState","useParams","AuthContext","Loader","useHttp","LinkCard","DetailPage","token","request","loading","link","setLink","linkId","id","getLink","Authorization","fetched"],"mappings":"6dAAA,MAAOA,CAAAA,KAAP,EAAeC,WAAf,CAA4BC,UAA5B,CAAwCC,SAAxC,CAAmDC,QAAnD,KAAkE,OAAlE,CACA,OAAQC,SAAR,KAAwB,kBAAxB,CACA,OAAQC,WAAR,KAA0B,wBAA1B,CACA,OAAQC,MAAR,KAAqB,sBAArB,CACA,OAAQC,OAAR,KAAsB,oBAAtB,CACA,OAAQC,QAAR,KAAuB,wBAAvB,C,gGAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAC5B,gBAAgBR,UAAU,CAACI,WAAD,CAA1B,CAAOK,KAAP,aAAOA,KAAP,CACA,aAA2BH,OAAO,EAAlC,CAAOI,OAAP,UAAOA,OAAP,CAAgBC,OAAhB,UAAgBA,OAAhB,CACA,cAAwBT,QAAQ,CAAC,IAAD,CAAhC,wCAAOU,IAAP,eAAaC,OAAb,eACA,GAAMC,CAAAA,MAAM,CAAGX,SAAS,GAAGY,EAA3B,CAEA,GAAMC,CAAAA,OAAO,CAAGjB,WAAW,sEAAC,qLAEEW,CAAAA,OAAO,qBAAcI,MAAd,EAAwB,KAAxB,CAA+B,IAA/B,CAAqC,CAACG,aAAa,kBAAYR,KAAZ,CAAd,CAArC,CAFT,QAEdS,OAFc,eAGpBL,OAAO,CAACK,OAAD,CAAP,CAHoB,iJAAD,GAKxB,CAACT,KAAD,CAAQK,MAAR,CAAgBJ,OAAhB,CALwB,CAA3B,CAOAT,SAAS,CAAC,UAAM,CACZe,OAAO,GACV,CAFQ,CAEN,CAACA,OAAD,CAFM,CAAT,CAIA,GAAGL,OAAH,CAAY,CACR,mBAAO,KAAC,MAAD,IAAP,CACH,CAED,mBACI,yBACM,CAACA,OAAD,EAAYC,IAAZ,eAAoB,KAAC,QAAD,EAAU,IAAI,CAAEA,IAAhB,EAD1B,EADJ,CAKH,CA1BM","sourcesContent":["import React, {useCallback, useContext, useEffect, useState} from \"react\"\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const [link, setLink] = useState(null)\r\n    const linkId = useParams().id\r\n\r\n    const getLink = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`/api/link/${linkId}`, 'GET', null, {Authorization: `Bearer ${token}`})\r\n            setLink(fetched)\r\n        } catch (e) {}\r\n    }, [token, linkId, request])\r\n\r\n    useEffect(() => {\r\n        getLink()\r\n    }, [getLink])\r\n\r\n    if(loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            { !loading && link && <LinkCard link={link} /> }\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}