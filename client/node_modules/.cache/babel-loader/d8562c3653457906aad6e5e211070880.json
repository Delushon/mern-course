{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  _s();\n\n  const [loading, setLoad] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'Что-то пошло не так');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};\n\n_s(useHttp, \"s3foNxU4iSu3b6057JbkFBNEzM0=\");","map":{"version":3,"sources":["C:/Users/pansh/Desktop/mern-course/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoad","error","setError","request","url","method","body","headers","setLoading","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBJ,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,OAAO,GAAGN,WAAW,CAAC,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AAClFC,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACH;;AAEDP,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,aAAOG,IAAP;AACH,KAXD,CAWE,OAAOK,CAAP,EAAU;AACRR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAN,MAAAA,QAAQ,CAACc,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACH;AACJ,GAlB0B,EAkBxB,EAlBwB,CAA3B;;AAoBA,QAAMC,UAAU,GAAG,MAAMf,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2BgB,IAAAA;AAA3B,GAAP;AACH,CA1BM;;GAAMnB,O","sourcesContent":["import {useState, useCallback} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoad] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = await response.json()\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || 'Что-то пошло не так')\r\n            }\r\n\r\n            setLoading(false)\r\n\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n\r\n    const clearError = () => setError(null)\r\n\r\n    return { loading, request, error, clearError }\r\n}"]},"metadata":{},"sourceType":"module"}